// Generated from HandlerName.g4 by ANTLR 4.10.1
// jshint ignore: start
import antlr4 from '../../vendor/antlr4.js';


const serializedATN = [4,0,15,207,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,1,0,1,0,
3,0,86,8,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,
7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,
1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,
22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,27,1,27,1,28,3,28,
147,8,28,1,28,1,28,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,32,
1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,
34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,
1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,
40,1,40,1,40,0,0,41,1,1,3,0,5,0,7,0,9,0,11,0,13,0,15,0,17,0,19,0,21,0,23,
0,25,0,27,0,29,0,31,0,33,0,35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,0,51,0,
53,0,55,2,57,3,59,4,61,5,63,6,65,7,67,8,69,9,71,10,73,11,75,12,77,13,79,
14,81,15,1,0,28,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,
100,100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,
104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,
108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,
112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,
116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,
120,120,2,0,89,89,121,121,2,0,90,90,122,122,3,0,10,10,13,13,32,32,1,0,65,
90,182,0,1,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,
63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,1,85,1,0,0,0,3,89,
1,0,0,0,5,91,1,0,0,0,7,93,1,0,0,0,9,95,1,0,0,0,11,97,1,0,0,0,13,99,1,0,0,
0,15,101,1,0,0,0,17,103,1,0,0,0,19,105,1,0,0,0,21,107,1,0,0,0,23,109,1,0,
0,0,25,111,1,0,0,0,27,113,1,0,0,0,29,115,1,0,0,0,31,117,1,0,0,0,33,119,1,
0,0,0,35,121,1,0,0,0,37,123,1,0,0,0,39,125,1,0,0,0,41,127,1,0,0,0,43,129,
1,0,0,0,45,131,1,0,0,0,47,133,1,0,0,0,49,135,1,0,0,0,51,137,1,0,0,0,53,139,
1,0,0,0,55,141,1,0,0,0,57,146,1,0,0,0,59,152,1,0,0,0,61,154,1,0,0,0,63,156,
1,0,0,0,65,158,1,0,0,0,67,165,1,0,0,0,69,172,1,0,0,0,71,179,1,0,0,0,73,184,
1,0,0,0,75,191,1,0,0,0,77,194,1,0,0,0,79,200,1,0,0,0,81,204,1,0,0,0,83,86,
3,79,39,0,84,86,3,81,40,0,85,83,1,0,0,0,85,84,1,0,0,0,86,87,1,0,0,0,87,88,
6,0,0,0,88,2,1,0,0,0,89,90,7,0,0,0,90,4,1,0,0,0,91,92,7,1,0,0,92,6,1,0,0,
0,93,94,7,2,0,0,94,8,1,0,0,0,95,96,7,3,0,0,96,10,1,0,0,0,97,98,7,4,0,0,98,
12,1,0,0,0,99,100,7,5,0,0,100,14,1,0,0,0,101,102,7,6,0,0,102,16,1,0,0,0,
103,104,7,7,0,0,104,18,1,0,0,0,105,106,7,8,0,0,106,20,1,0,0,0,107,108,7,
9,0,0,108,22,1,0,0,0,109,110,7,10,0,0,110,24,1,0,0,0,111,112,7,11,0,0,112,
26,1,0,0,0,113,114,7,12,0,0,114,28,1,0,0,0,115,116,7,13,0,0,116,30,1,0,0,
0,117,118,7,14,0,0,118,32,1,0,0,0,119,120,7,15,0,0,120,34,1,0,0,0,121,122,
7,16,0,0,122,36,1,0,0,0,123,124,7,17,0,0,124,38,1,0,0,0,125,126,7,18,0,0,
126,40,1,0,0,0,127,128,7,19,0,0,128,42,1,0,0,0,129,130,7,20,0,0,130,44,1,
0,0,0,131,132,7,21,0,0,132,46,1,0,0,0,133,134,7,22,0,0,134,48,1,0,0,0,135,
136,7,23,0,0,136,50,1,0,0,0,137,138,7,24,0,0,138,52,1,0,0,0,139,140,7,25,
0,0,140,54,1,0,0,0,141,142,7,26,0,0,142,143,1,0,0,0,143,144,6,27,0,0,144,
56,1,0,0,0,145,147,5,13,0,0,146,145,1,0,0,0,146,147,1,0,0,0,147,148,1,0,
0,0,148,149,5,10,0,0,149,150,1,0,0,0,150,151,6,28,0,0,151,58,1,0,0,0,152,
153,5,95,0,0,153,60,1,0,0,0,154,155,7,27,0,0,155,62,1,0,0,0,156,157,9,0,
0,0,157,64,1,0,0,0,158,159,3,7,3,0,159,160,3,37,18,0,160,161,3,11,5,0,161,
162,3,3,1,0,162,163,3,41,20,0,163,164,3,11,5,0,164,66,1,0,0,0,165,166,3,
43,21,0,166,167,3,33,16,0,167,168,3,9,4,0,168,169,3,3,1,0,169,170,3,41,20,
0,170,171,3,11,5,0,171,68,1,0,0,0,172,173,3,9,4,0,173,174,3,11,5,0,174,175,
3,25,12,0,175,176,3,11,5,0,176,177,3,41,20,0,177,178,3,11,5,0,178,70,1,0,
0,0,179,180,3,37,18,0,180,181,3,11,5,0,181,182,3,3,1,0,182,183,3,9,4,0,183,
72,1,0,0,0,184,185,3,5,2,0,185,186,3,11,5,0,186,187,3,13,6,0,187,188,3,31,
15,0,188,189,3,37,18,0,189,190,3,11,5,0,190,74,1,0,0,0,191,192,3,31,15,0,
192,193,3,29,14,0,193,76,1,0,0,0,194,195,3,3,1,0,195,196,3,13,6,0,196,197,
3,41,20,0,197,198,3,11,5,0,198,199,3,37,18,0,199,78,1,0,0,0,200,201,3,3,
1,0,201,202,3,29,14,0,202,203,3,9,4,0,203,80,1,0,0,0,204,205,3,31,15,0,205,
206,3,37,18,0,206,82,1,0,0,0,3,0,85,146,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class HandlerNameLexer extends antlr4.Lexer {

    static grammarFileName = "HandlerName.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, null, "'_'" ];
	static symbolicNames = [ null, "Operator", "WS", "LINEB_REAK", "UNDER_SCORE", 
                          "UPPER_CHAR", "CHAR", "CREATE", "UPDATE", "DELETE", 
                          "READ", "BEFORE", "ON", "AFTER", "AND", "OR" ];
	static ruleNames = [ "Operator", "A", "B", "C", "D", "E", "F", "G", "H", 
                      "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", 
                      "S", "T", "U", "V", "W", "X", "Y", "Z", "WS", "LINEB_REAK", 
                      "UNDER_SCORE", "UPPER_CHAR", "CHAR", "CREATE", "UPDATE", 
                      "DELETE", "READ", "BEFORE", "ON", "AFTER", "AND", 
                      "OR" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

HandlerNameLexer.EOF = antlr4.Token.EOF;
HandlerNameLexer.Operator = 1;
HandlerNameLexer.WS = 2;
HandlerNameLexer.LINEB_REAK = 3;
HandlerNameLexer.UNDER_SCORE = 4;
HandlerNameLexer.UPPER_CHAR = 5;
HandlerNameLexer.CHAR = 6;
HandlerNameLexer.CREATE = 7;
HandlerNameLexer.UPDATE = 8;
HandlerNameLexer.DELETE = 9;
HandlerNameLexer.READ = 10;
HandlerNameLexer.BEFORE = 11;
HandlerNameLexer.ON = 12;
HandlerNameLexer.AFTER = 13;
HandlerNameLexer.AND = 14;
HandlerNameLexer.OR = 15;



